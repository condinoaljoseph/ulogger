{"version":3,"sources":["actions/logsAction.js","actions/types.js","component/layout/SearchBar.js","component/logs/LogItem.js","component/layout/PreLoader.js","component/logs/Logs.js","component/layout/AddBtn.js","actions/techAction.js","component/techs/TechSelectOptions.js","component/logs/AddLogModal.js","component/logs/EditLogModal.js","component/techs/AddTechModal.js","component/techs/TechItem.js","component/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","PreLoader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstname","lastname","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updatedLog","addTech","setFirstname","setLastname","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd233288.chunk.js","sourcesContent":["import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT\r\n} from '../actions/types';\r\n\r\nexport const getLogs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/logs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/logs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteLog = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/logs/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchLogs = text => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrent = log => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log\r\n  };\r\n};\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT\r\n  };\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logsAction';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onChange = e => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className='blue'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              id='search'\r\n              type='search'\r\n              placeholder='ulogger'\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className='label-icon' htmlFor='search'>\r\n              <i className='material-icons'>search</i>\r\n            </label>\r\n            <i className='material-icons'>close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteLog, setCurrent } from '../../actions/logsAction';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: 'Log Deleted' });\r\n  };\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n          <span className='black-text'>{log.tech}</span> on{' '}\r\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' onClick={onDelete} className='secondary-content'>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n","import React from 'react';\r\n\r\nconst PreLoader = () => {\r\n  return (\r\n    <div className='progress blue lighten-4'>\r\n      <div className='indeterminate blue'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreLoader;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport PreLoader from '../layout/PreLoader';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from '../../actions/logsAction';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <PreLoader />;\r\n  }\r\n\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No logs to show...</p>\r\n      ) : (\r\n        logs.map(log => <LogItem log={log} key={log.id} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  log: state.log\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR\r\n} from './types';\r\n\r\nexport const getTechs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/techs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const addTech = tech => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTech = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/techs/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techAction';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstname} ${t.lastname}`}>\r\n        {t.firstname} {t.lastname}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logsAction';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and technician' });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      addLog(newLog);\r\n\r\n      M.toast({ html: `Log added by ${tech}` });\r\n\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-green btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nexport default connect(null, { addLog })(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateLog } from '../../actions/logsAction';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.setTech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and technician' });\r\n    } else {\r\n      const updatedLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      updateLog(updatedLog);\r\n\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-green btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nconst mapStateToProp = state => ({\r\n  current: state.log.current\r\n});\r\n\r\nexport default connect(mapStateToProp, { updateLog })(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techAction';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstname === '' || lastname === '') {\r\n      M.toast({ html: 'Please enter the first and last name' });\r\n    } else {\r\n      addTech({\r\n        firstname,\r\n        lastname\r\n      });\r\n\r\n      M.toast({ html: `${firstname} ${lastname} was added as a tech` });\r\n\r\n      setFirstname('');\r\n      setLastname('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstname'\r\n              value={firstname}\r\n              onChange={e => setFirstname(e.target.value)}\r\n            />\r\n            <label htmlFor='firstname' className='active'>\r\n              Firstname\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastname'\r\n              value={lastname}\r\n              onChange={e => setLastname(e.target.value)}\r\n            />\r\n            <label htmlFor='lastname' className='active'>\r\n              Lastname\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-green btn'\r\n        >\r\n          Add Tech\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTech } from '../../actions/techAction';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech: { firstname, lastname, id }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n\r\n    M.toast({ html: 'Technician deleted' });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {firstname} {lastname}\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techAction';\r\nimport TechItem from './TechItem';\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  getTechs: PropTypes.func.isRequired,\r\n  tech: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\r\n","import {\r\n  SET_LOADING,\r\n  GET_LOGS,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(log => log.id !== action.payload),\r\n        loading: false\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map(log =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        )\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter(tech => tech.id !== action.payload),\r\n        loading: false\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case TECHS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\nimport SearchBar from './component/layout/SearchBar';\nimport Logs from './component/logs/Logs';\nimport AddBtn from './component/layout/AddBtn';\nimport AddLogModal from './component/logs/AddLogModal';\nimport EditLogModal from './component/logs/EditLogModal';\nimport AddTechModal from './component/techs/AddTechModal';\nimport TechListModal from './component/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}